<?php

namespace App\Http\Controllers;

use App\Services\SinaliteService;
use Illuminate\Http\Request;
use App\Models\Product; // Your product model
use Illuminate\Support\Facades\Log;

class ProductImportController extends Controller
{
    protected $sinaliteService;

    public function __construct(SinaliteService $sinaliteService)
    {
        $this->sinaliteService = $sinaliteService;
    }

    /**
     * Import products from SinaLite API to the database.
     */
    public function importProducts()
    {
        try {
            // Fetch products from the API
            $products = $this->sinaliteService->getProducts();

            foreach ($products as $product) {
                // Insert or update product in the database
                Product::updateOrCreate(
                    ['sku' => $product['sku']], // Match on SKU
                    [
                        'name' => $product['name'],
                        'slug' => str_slug($product['name']),
                        'description' => $product['description'] ?? '',
                        'price' => $product['price'] ?? 0,
                        'category_id' => $this->mapCategory($product['category_id']),
                        'subcategory_id' => $this->mapSubcategory($product['subcategory_id'] ?? null),
                    ]
                );
            }

            return response()->json(['message' => 'Products imported successfully']);
        } catch (\Exception $e) {
            Log::error('Error importing products: ' . $e->getMessage());
            return response()->json(['error' => 'Failed to import products'], 500);
        }
    }

    /**
     * Helper function to map category ID if needed.
     */
    protected function mapCategory($apiCategoryId)
    {
        // Here you can map API category IDs to your internal database category IDs.
        // For now, we'll just return the same value.
        return $apiCategoryId;
    }

    /**
     * Helper function to map subcategory ID if needed.
     */
    protected function mapSubcategory($apiSubcategoryId)
    {
        // Here you can map API subcategory IDs to your internal database subcategory IDs.
        return $apiSubcategoryId;
    }
}
